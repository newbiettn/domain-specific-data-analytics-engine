@startuml

title __VALUES's Class Diagram__\n

  namespace  {
    namespace e.fuberlin.wiwiss.d2rq {
      namespace values {
        class de.fuberlin.wiwiss.d2rq.values.AllTests {
            {static} + suite()
        }
      }
    }
  }
  

  namespace  {
    namespace e.fuberlin.wiwiss.d2rq {
      namespace values {
        class de.fuberlin.wiwiss.d2rq.values.DummyValueMaker {
            - projectionSpecs : Set<ProjectionSpec>
            - returnValue : String
            - selectCondition : Expression
            + DummyValueMaker()
            + describeSelf()
            + makeValue()
            + orderSpecs()
            + projectionSpecs()
            + renameAttributes()
            + setProjectionSpecs()
            + setSelectCondition()
            + setValue()
            + valueExpression()
        }
      }
    }
  }
  

  namespace  {
    namespace e.fuberlin.wiwiss.d2rq {
      namespace values {
        class de.fuberlin.wiwiss.d2rq.values.PatternTest {
            {static} - col1 : Attribute
            {static} - col2 : Attribute
            {static} - col3 : Attribute
            {static} - col4 : Attribute
            {static} - col5 : Attribute
            - row : ResultRow
            + setUp()
            + testEmptyFirstPart()
            + testEmptyLastPart()
            + testFirstAndLastPart()
            + testIdenticalPatternsAreCompatible()
            + testLiteralPatternRegexIsAnchored()
            + testLiteralPatternRegexMatchesOnlyLiteralParts()
            + testLiteralPatternRegexMultipleParts()
            + testLiteralPatternsDontMatchTrivialRegex()
            + testLiteralPatternsMatchTrivialRegex()
            + testMagicRegexCharactersCauseNoProblems()
            + testMatches()
            + testMatchesMiniPattern()
            + testMatchesOneColumnPattern()
            + testMatchesPatternContainingNewlines()
            + testMatchesPatternEndingWithColumn()
            + testMatchesPatternStartingWithColumn()
            + testMatchesTrivialPattern()
            + testMatchesTwoColumnPattern()
            + testMultiColumnPatternsWithDifferentLiteralPartsAreNotCompatible()
            + testNull()
            + testPartsIteratorAdjacentColumns()
            + testPartsIteratorFirstColumnThenLiteral()
            + testPartsIteratorFirstLiteralThenColumn()
            + testPartsIteratorSeveralColumns()
            + testPartsIteratorSingleLiteral()
            + testPatternEncode()
            + testPatternSyntax()
            + testPatternURLEncode()
            + testPatternURLEncodeIllegal()
            + testPatternURLify()
            + testPatternURLifyEscapeUnderscore()
            + testPatternsWithDifferentColumnNamesAreCompatible()
            + testPatternsWithDifferentColumnsAreNotEqual()
            + testPatternsWithDifferentLiteralPartsAreNotCompatible()
            + testPatternsWithDifferentLiteralPartsAreNotEqual()
            + testSamePatternsAreEqual()
            + testSimple()
            + testToString()
            + testTrivialPatternFirstPart()
            + testTrivialPatternLastPart()
            - assertPattern()
            - assertPatternValues()
            - matches()
            - row()
        }
      }
    }
  }
  

  namespace  {
    namespace e.fuberlin.wiwiss.d2rq {
      namespace values {
        class de.fuberlin.wiwiss.d2rq.values.ValueMakerTest {
            {static} - foo_col1 : Attribute
            {static} - foo_col2 : Attribute
            + testBlankNodeIDDoesNotMatchNull()
            + testBlankNodeIDToString()
            + testColumnDoesNotMatchNull()
            + testColumnToString()
            + testContainsConstraint()
            + testMaxLengthConstraint()
            + testPatternDoesNotMatchNull()
            + testPatternToString()
            + testRegexConstraint()
            + testValueDecoratorWithoutTranslatorToString()
            - matches()
        }
      }
    }
  }
  

  de.fuberlin.wiwiss.d2rq.values.DummyValueMaker .up.|> ValueMaker


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
