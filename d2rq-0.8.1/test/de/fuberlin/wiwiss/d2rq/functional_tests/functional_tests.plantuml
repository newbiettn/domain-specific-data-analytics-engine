@startuml

title __FUNCTIONAL_TESTS's Class Diagram__\n

  namespace  {
    namespace e.fuberlin.wiwiss.d2rq {
      namespace functional_tests {
        class de.fuberlin.wiwiss.d2rq.functional_tests.AllTests {
            {static} + main()
            {static} + suite()
        }
      }
    }
  }
  

  namespace  {
    namespace e.fuberlin.wiwiss.d2rq {
      namespace functional_tests {
        class de.fuberlin.wiwiss.d2rq.functional_tests.FindTest {
            + testDatatypeFindByString()
            + testDatatypeFindByYear()
            + testDatatypeFindYear()
            + testDatatypeYearContains()
            + testDefinitions()
            + testDump()
            + testFindAliasedPropertyBridge()
            + testFindAnonymousNode()
            + testFindPredicate()
            + testFindSubjectWhereObjectURIColumn()
            + testFindSubjectWhereObjectURIPattern()
            + testFindSubjectWithConditionalObject()
            + testListAuthors()
            + testListTopicInstances()
            + testListTopicNames()
            + testListTypeStatements()
            + testLiteralLanguage()
            + testMatchAnonymousObject()
            + testMatchAnonymousSubject()
            + testReverseFetchWithDatatype()
            + testReverseFetchWithURI()
            + testXSDStringDoesntMatchPlainLiteral()
        }
      }
    }
  }
  

  namespace  {
    namespace e.fuberlin.wiwiss.d2rq {
      namespace functional_tests {
        class de.fuberlin.wiwiss.d2rq.functional_tests.ModelAPITest {
            - model : ModelD2RQ
            + testHasProperty()
            + testListStatements()
            # setUp()
            # tearDown()
            ~ dumpStatement()
        }
      }
    }
  }
  

  namespace  {
    namespace e.fuberlin.wiwiss.d2rq {
      namespace functional_tests {
        class de.fuberlin.wiwiss.d2rq.functional_tests.SPARQLTest {
            + testGetTitleAndYearOfAllPapers()
            + testRDFType()
            + testSPARQLFetch()
            + testSPARQLGetAuthorsAndEmails()
            + testSPARQLGetAuthorsAndEmailsWithCondition()
            + testSPARQLGetAuthorsNameAndEmail()
            + testSPARQLGetAuthorsOfPaperByTitle()
            + testSPARQLGetTopics()
            # mapURL()
        }
      }
    }
  }
  



right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
